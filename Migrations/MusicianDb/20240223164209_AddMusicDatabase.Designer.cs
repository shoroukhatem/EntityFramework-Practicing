// <auto-generated />
using System;
using EF_CORE_Project.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EF_CORE_Project.Migrations.MusicianDb
{
    [DbContext(typeof(MusicianDbContext))]
    [Migration("20240223164209_AddMusicDatabase")]
    partial class AddMusicDatabase
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.27")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("EF_CORE_Project.Music.Album", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("Mus_Id")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Mus_Id");

                    b.ToTable("Albums");
                });

            modelBuilder.Entity("EF_CORE_Project.Music.Album_Song", b =>
                {
                    b.Property<string>("Song_Title")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Album_Id")
                        .HasColumnType("int");

                    b.HasKey("Song_Title");

                    b.HasIndex("Album_Id");

                    b.ToTable("Album_Song");
                });

            modelBuilder.Entity("EF_CORE_Project.Music.Instrument", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Name");

                    b.ToTable("Instruments");
                });

            modelBuilder.Entity("EF_CORE_Project.Music.Mus_Instrument", b =>
                {
                    b.Property<int>("Mus_Id")
                        .HasColumnType("int");

                    b.Property<string>("Inst_Name")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Mus_Id", "Inst_Name");

                    b.HasIndex("Inst_Name");

                    b.ToTable("Mus_Instruments");
                });

            modelBuilder.Entity("EF_CORE_Project.Music.Mus_song", b =>
                {
                    b.Property<int>("Mus_Id")
                        .HasColumnType("int");

                    b.Property<string>("Song_Title")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Mus_Id", "Song_Title");

                    b.HasIndex("Song_Title");

                    b.ToTable("Mus_Songs");
                });

            modelBuilder.Entity("EF_CORE_Project.Music.Musician", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ph_Number")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Musicians");
                });

            modelBuilder.Entity("EF_CORE_Project.Music.Song", b =>
                {
                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Title");

                    b.ToTable("Song");
                });

            modelBuilder.Entity("EF_CORE_Project.Music.Album", b =>
                {
                    b.HasOne("EF_CORE_Project.Music.Musician", "Musician")
                        .WithMany("Albums")
                        .HasForeignKey("Mus_Id");

                    b.Navigation("Musician");
                });

            modelBuilder.Entity("EF_CORE_Project.Music.Album_Song", b =>
                {
                    b.HasOne("EF_CORE_Project.Music.Album", "Album")
                        .WithMany()
                        .HasForeignKey("Album_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EF_CORE_Project.Music.Song", "Song")
                        .WithMany()
                        .HasForeignKey("Song_Title")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Album");

                    b.Navigation("Song");
                });

            modelBuilder.Entity("EF_CORE_Project.Music.Mus_Instrument", b =>
                {
                    b.HasOne("EF_CORE_Project.Music.Instrument", "Instrument")
                        .WithMany()
                        .HasForeignKey("Inst_Name")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EF_CORE_Project.Music.Musician", "Musician")
                        .WithMany()
                        .HasForeignKey("Mus_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Instrument");

                    b.Navigation("Musician");
                });

            modelBuilder.Entity("EF_CORE_Project.Music.Mus_song", b =>
                {
                    b.HasOne("EF_CORE_Project.Music.Musician", "Musician")
                        .WithMany()
                        .HasForeignKey("Mus_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EF_CORE_Project.Music.Song", "Song")
                        .WithMany()
                        .HasForeignKey("Song_Title")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Musician");

                    b.Navigation("Song");
                });

            modelBuilder.Entity("EF_CORE_Project.Music.Musician", b =>
                {
                    b.Navigation("Albums");
                });
#pragma warning restore 612, 618
        }
    }
}
